# vi: ft=sh

# ================================================================ # WORKSPACE for Code
# ================================================================
export CODEHOME=$HOME/code

# ================================================================
# PAGER / EDITOR
# ================================================================
[ "$(command -v vim)" ] && export EDITOR=vim && set -o vi
if [ -n "$(command -v less)" ]; then
  PAGER="less -FirSwX"
  MANPAGER="less -FiRswX"
else
  PAGER=more
  MANPAGER="$PAGER"
fi
export PAGER MANPAGER

# ================================================================
# GO SETTINGS
# ================================================================
# Set GOPATH if missing
if [ -z "${GOPATH}" ]; then
  export GOPATH=$CODEHOME/go
	export PATH=$GOPATH/bin:$PATH
fi

# ================================================================
# LOAD GO Dev Helper
# ================================================================
[ -f $HOME/.dotfiles/tools/gohelpers.sh ] && source $HOME/.dotfiles/tools/gohelpers.sh

# ================================================================
# RUST
# ================================================================
[ "$(command -v cargo)" ] && \
  export PATH="$HOME/.cargo/bin:$PATH" # Add cargo binaries to PATH

# ================================================================
# PYTHON
# ================================================================
# Use Python 3 by default
[ "$(command -v python3)" ] && \
  export PATH="/usr/local/opt/python/libexec/bin:$PATH" 

# ================================================================
# RUBY/RVM
# ================================================================
[ "$(command -v rvm)" ] && \
  export PATH="$PATH:$HOME/.rvm/bin" # Add RVM to PATH for scripting
  # Load RVM into a shell session as a function
  [[ -s "$HOME/.rvm/scripts/rvm" ]] && source "$HOME/.rvm/scripts/rvm" 

# ================================================================
# Homebrew
# ================================================================
[ "$(/opt/homebrew/bin/brew shellenv)" ] && \
  eval "$(/opt/homebrew/bin/brew shellenv)"

# ================================================================
# ASDF
# ================================================================
[ -f /opt/homebrew/opt/asdf/libexec/asdf.sh ] && \
  source /opt/homebrew/opt/asdf/libexec/asdf.sh
export PATH="${ASDF_DATA_DIR:-$HOME/.asdf}/shims:$PATH"
# append completions to fpath
fpath=(${ASDF_DATA_DIR:-$HOME/.asdf}/completions $fpath)

# initialise completions with ZSH's compinit
autoload -Uz compinit && compinit


# LOAD LOCAL HELPES
# ================================================================
[ -f $HOME/.dotfiles/tools/helpers.sh ] && source $HOME/.dotfiles/tools/helpers.sh

# ================================================================
# LOAD LOCAL ENV
# ================================================================
[ -f $HOME/.env ] && source $HOME/.env

# ================================================================
# GNU Make 4.0
# ================================================================
[ -f "/opt/homebrew/opt/make/libexec/gnubin/make" ] && \
  alias make="gmake" && \
  export PATH="/opt/homebrew/opt/make/libexec/gnubin:$PATH"

# ================================================================
# direnv
# ================================================================
if [ "$(command -v direnv)" ]; then
  case "$SHELL" in
    */zsh)
      eval "$(direnv hook zsh)"
      ;;
    */bash)
      eval "$(direnv hook bash)"
      ;;
  esac
fi

# ================================================================
# Use Homebrew Unzip if available
# ================================================================

[ -f "/opt/homebrew/opt/unzip/bin/unzip" ] && \
  export PATH="/opt/homebrew/opt/unzip/bin:$PATH"


# ================================================================
# Use Homebrew Curl if available
# ================================================================

[ -f "/opt/homebrew/opt/curl/bin/curl" ] && \
  export PATH="/opt/homebrew/opt/curl/bin:$PATH" && \
  export LDFLAGS="-L/opt/homebrew/opt/curl/lib" && \
  export CPPFLAGS="-I/opt/homebrew/opt/curl/include"

# ================================================================
# Use Homebrew GNU Getopt if available
# ================================================================

[ -f "/opt/homebrew/opt/gnu-getopt/bin/getopt" ] && \
  export PATH="/opt/homebrew/opt/gnu-getopt/bin:$PATH"

