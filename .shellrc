#!/bin/sh

# ================================================================
# JOBS
# ================================================================
# notify of bg job completion immediately
set -o notify

# ================================================================
# Code workspace
# ================================================================
export CODEHOME=$HOME/code

# ================================================================
# PATHS
# ================================================================
# we want the various sbins on the path along with /usr/local/bin
export PATH="$PATH:/usr/local/bin:/usr/local/sbin:/usr/sbin:/sbin"

# put ~/bin on PATH if you have it
[ -d "$HOME/bin" ] && export PATH="$HOME/bin:$PATH"

# ================================================================
# ENVIRONMENT CONFIGURATION
# ================================================================
# detect interactive shell
case "$-" in
    *i*) INTERACTIVE=yes ;;
    *)   unset INTERACTIVE ;;
esac
# detect login shell
case "$0" in
    -*) LOGIN=yes ;;
    *)  unset LOGIN ;;
esac
# always use PASSIVE mode ftp
: ${FTP_PASSIVE:=1}
export FTP_PASSIVE

# history config
HISTCONTROL=ignoreboth
HISTFILESIZE=10000
HISTSIZE=10000

# ================================================================
# RBENV
# ================================================================
[ "$(command -v rbenv)" ] && eval "$(rbenv init -)"

# ================================================================
# RVM
# ================================================================
[ "$(command -v rvm)" ] && \
  export PATH="$PATH:$HOME/.rvm/bin" # Add RVM to PATH for scripting
  # Load RVM into a shell session *as a function*
  [[ -s "$HOME/.rvm/scripts/rvm" ]] && source "$HOME/.rvm/scripts/rvm" 

# ================================================================
# PAGER / EDITOR
# ================================================================
[ "$(command -v vim)" ] && export EDITOR=vim && set -o vi

if [ -n "$(command -v less)" ]; then
  PAGER="less -FirSwX"
  MANPAGER="less -FiRswX"
else
  PAGER=more
  MANPAGER="$PAGER"
fi
export PAGER MANPAGER

# ================================================================
# ACK
# ================================================================
ACK_PAGER="$PAGER"
ACK_PAGER_COLOR="$PAGER"

# ================================================================
# NODE SETUP
# ================================================================
if [ "$(command -v npm)" ]; then
  export PATH=$HOME/.node/bin:$PATH
fi

# ===============================================================
# SERVER UPTIME
# ===============================================================
if [[ -n "$INTERACTIVE" && -n "$LOGIN" ]]; then
  uname -npsr
  uptime
fi

# ================================================================
# INITIALIZE docker-machine shell variables
# ================================================================
[ "$(command -v docker-machine)" ] \
  && [ "$(docker-machine status dev 2>/dev/null)" = "Running" ] \
  && eval "$(docker-machine env dev)"

# ================================================================
# HELPER function for chef sdk
# ================================================================
function chef-init() {
  case $SHELL in
    *zsh)
      eval "$(chef shell-init zsh)"
      ;;
    *bash)
      eval "$(chef shell-init bash)"
      ;;
  esac
}

# ================================================================
# GO SETTINGS
# ================================================================
# Set GOPATH if missing
if [ -z "${GOPATH}" ]; then
  export GOPATH=$CODEHOME/go
  export PATH=$GOPATH/bin:$PATH:/usr/local/opt/go/libexec/bin
fi

# ================================================================
# LOAD GO Dev Helper
# ================================================================
[ -f $HOME/.dotfiles/tools/gohelpers.sh ] && source $HOME/.dotfiles/tools/gohelpers.sh


# ================================================================
# LOAD LOCAL ENV
# ================================================================
[ -f "${HOME}"/.env ] && source $HOME/.env
